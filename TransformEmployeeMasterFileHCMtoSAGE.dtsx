<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/25/2022 10:58:45 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-QD210LS"
  DTS:CreatorName="DESKTOP-QD210LS\Kaylen"
  DTS:DTSID="{16AC7986-4345-46D3-BCF8-1D732A3A0466}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.521.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="TransformEmployeeMasterFileHCMtoSAGE"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="98"
  DTS:VersionGUID="{495ADCB4-9956-4164-8FD5-DAAF88B4301F}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Integration]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DelayValidation="True"
      DTS:DTSID="{5E15F3A3-FA67-4E6F-B1A4-D6B14B824B6C}"
      DTS:ObjectName="Integration">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::LocalSourceConnectionString]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Package::LocalIntegrationDb]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Package::LocalIntegrationServer]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=DESKTOP-QD210LS;Initial Catalog=SQLEXPRESS;Integrated Security=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{F0111318-3622-4DE1-A009-A8F8B325E07D}"
      DTS:ObjectName="ArchivePrefix">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">False</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{1C5BD795-8FD1-4757-8282-525CB22E853E}"
      DTS:ObjectName="CsvDelimiter">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">,</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{7000798A-DCE0-44E2-8B9B-50F488779C03}"
      DTS:ObjectName="FieldQuote">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{5BE8A19B-00D5-4988-9BAC-80DDADFC35B8}"
      DTS:ObjectName="FileURI">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\Users\Kaylen\Downloads\Testing\Source</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{58A4426F-5BEC-486A-80AD-9D26C5BDC1EE}"
      DTS:ObjectName="FormatTerminator">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">False</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{8F1523BB-8A2A-439D-98FA-BFE3541CFBAC}"
      DTS:ObjectName="InboundFileNamePattern">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Emp_*.csv</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{238202A3-11CC-4EC7-9DFF-FE5D0E031EA3}"
      DTS:ObjectName="LocalIntegrationDb">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">SQLEXPRESS</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{8D1DCB2A-2A7C-4233-95E6-8CBE4F1EFCFB}"
      DTS:ObjectName="LocalIntegrationServer">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">DESKTOP-QD210LS</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{746BDFE0-740A-4AFC-BF3E-C4CAB4E15E2A}"
      DTS:ObjectName="LocalSourceConnectionString">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Data Source=.;Initial Catalog=SQLEXPRESS;Integrated Security=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{8CB64CF4-B62F-42CC-B8D4-EB52BBEDCB4E}"
      DTS:ObjectName="MoveAfterFailure">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\Testing\Error</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{4078975B-87E1-46B7-8D00-2161E949B659}"
      DTS:ObjectName="MoveAfterProcess">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\Testing\Archive</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{FAEA3751-B455-4CDB-8C5C-C6649D13225B}"
      DTS:ObjectName="ProcessName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Process Test</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{E2585243-9E37-4AAE-A922-E3297A2AD9FE}"
      DTS:ObjectName="RowTerminator">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">0x0a</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{F6C87E5E-8BA6-4FA2-BC9B-5790390C2496}"
      DTS:ObjectName="StagingTable">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">dbo.[EmployeeMasterQueueRAW]</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{28E4029D-7520-4BB9-84F4-F3A48C7DFD35}"
      DTS:ObjectName="StartRow">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">2</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{7C024D15-46BA-4CA8-A19B-6A0077E45EC1}"
      DTS:ObjectName="StoredProcedure">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">[procInsertFromStagingToTarget]</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7C057896-4331-436B-8007-43E64FB4BE65}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="DataSet">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A0CB124E-3C33-4CEF-B44D-96937DF29B3C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FileCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CEE2089E-2DE4-4EF6-9011-4BB851FF9D3C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileName">
      <DTS:VariableValue
        DTS:DataType="8">C:\\Users\\Kaylen\\Downloads\\Testing\\Source\\Emp_Sample HCM File Edited by JVR 1.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6A88AACA-C763-410F-B8E9-68240CD9E620}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::CsvDelimiter]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LocalCsvDelimiter">
      <DTS:VariableValue
        DTS:DataType="8">,</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8029DF4B-7EF7-429F-936C-31DCF7B51348}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::FieldQuote]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LocalFieldQuote">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CB09ECAF-860D-4F87-A70B-0C3A86028EFE}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::FormatTerminator]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LocalFormatTerminator">
      <DTS:VariableValue
        DTS:DataType="8">False</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D243D85E-0B2E-4EAA-8AB4-BCF0CF7EB3AB}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::RowTerminator]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LocalRowTerminator">
      <DTS:VariableValue
        DTS:DataType="8">0x0a</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{19F09BA4-E115-4EAE-934E-6A76683C7B36}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::StagingTable]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LocalStagingTable">
      <DTS:VariableValue
        DTS:DataType="8">dbo.[EmployeeMasterQueueRAW]</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{23B29969-2707-41AF-9444-899C10BCC960}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::StartRow]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LocalStartRow">
      <DTS:VariableValue
        DTS:DataType="3">2</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1313B03E-1E6C-4F08-9D8D-33963F369614}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="REPLACE(@[User::FileName], &#xA;RIGHT( @[User::FileName] , FINDSTRING( REVERSE( @[User::FileName]  ),&quot;\\&quot;,1) - 1),&#xA;&#xA;(DT_WSTR,4)DATEPART(&quot;yyyy&quot;,GetDate()) + (&#xA;RIGHT(&quot;0&quot; + (DT_WSTR,2)DATEPART(&quot;mm&quot;,GetDate()),2)+ &#xA;RIGHT(&quot;0&quot; + (DT_WSTR,2)DATEPART(&quot;dd&quot;,GetDate()),2)+ &#xA;RIGHT(&quot;0&quot; + (DT_WSTR,2)DATEPART(&quot;hh&quot;,GetDate()),2)+ &#xA;RIGHT(&quot;0&quot; + (DT_WSTR,2)DATEPART(&quot;mi&quot;,GetDate()),2)+ &#xA;RIGHT(&quot;0&quot; + (DT_WSTR,2)DATEPART(&quot;ss&quot;,GetDate()),2))+&#xA;&quot;_&quot;+&#xA;RIGHT( @[User::FileName] ,  FINDSTRING( REVERSE( @[User::FileName]  ),&quot;\\&quot;,1) - 1))"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RenamedFilePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\\Users\\Kaylen\\Downloads\\Testing\\Source\\20220622162519_Emp_Sample HCM File Edited by JVR 1.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5A6413F7-68DF-4005-832A-F31F879C9DBB}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="REPLACE( @[User::RenamedFilePath] , &#xA;RIGHT( @[User::RenamedFilePath] ,  FINDSTRING( REVERSE( @[User::RenamedFilePath]  ),&quot;\\&quot;,1) - 1),&#xA;&quot;Arch_&quot; + RIGHT( @[User::RenamedFilePath] ,  FINDSTRING( REVERSE( @[User::RenamedFilePath]  ),&quot;\\&quot;,1) - 1))"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RenamedFilePathArchive">
      <DTS:VariableValue
        DTS:DataType="8">C:\\Users\\Kaylen\\Downloads\\Testing\\Source\\Arch_20220622162519_Emp_Sample HCM File Edited by JVR 1.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AB22E059-561D-478A-9F13-FC9BFFD2C30E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFilePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\\Users\\Kaylen\\Downloads\\Testing\\Source\\Emp_Sample HCM File Edited by JVR 1.csv</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\ArchiveFileTask"
      DTS:CreationName="Microsoft.FileSystemTask"
      DTS:Description="File System Task"
      DTS:DTSID="{82b71438-add0-4f8e-93a3-1e9c9208ea59}"
      DTS:ExecutableType="Microsoft.FileSystemTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ArchiveFileTask"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="MoveFile"
          TaskOverwriteDestFile="True"
          TaskSourcePath="User::FileName"
          TaskIsSourceVariable="True"
          TaskDestinationPath="$Package::MoveAfterProcess"
          TaskIsDestinationVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ArchiveFileTask 1"
      DTS:CreationName="Microsoft.FileSystemTask"
      DTS:Description="ArchiveFileTask"
      DTS:DTSID="{972fbd18-b0d3-4a77-bd36-d8bf5b0f382f}"
      DTS:ExecutableType="Microsoft.FileSystemTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ArchiveFileTask 1"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="MoveFile"
          TaskOverwriteDestFile="True"
          TaskSourcePath="User::RenamedFilePathArchive"
          TaskIsSourceVariable="True"
          TaskDestinationPath="$Package::MoveAfterProcess"
          TaskIsDestinationVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Bulk Import into Staging Table"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{d69b7a03-d452-4ae9-a3e2-db8ba107ec12}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Bulk Import into Staging Table"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_bc552e9e6f5c4bac8115efae312731af"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::FileName,User::LocalCsvDelimiter,User::LocalFieldQuote,User::LocalFormatTerminator,User::LocalRowTerminator,User::LocalStagingTable,User::LocalStartRow">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_bc552e9e6f5c4bac8115efae312731af.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{1b25af3b-4157-4cea-8d56-3f2c666ed5b9}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_d0e90441a88e48c8b469feeca1b1d8f6</RootNamespace><AssemblyName>ST_bc552e9e6f5c4bac8115efae312731af</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST130</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d0e90441a88e48c8b469feeca1b1d8f6.Properties.Settings.get_Default():ST_d0e90441a88e48c8b469feeca1b1d8f6.Properties.Sett" +
    "ings")]

namespace ST_d0e90441a88e48c8b469feeca1b1d8f6.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
#endregion

namespace ST_d0e90441a88e48c8b469feeca1b1d8f6
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            /*String Name = Dts.Variables["User::FileName"].Value.ToString();
            MessageBox.Show(Name);
            */
            bool fireAgain = true;
            try
            {
                //init variables etc
                string fileName = Dts.Variables["User::FileName"].Value.ToString();
                string tableName = Dts.Variables["User::LocalStagingTable"].Value.ToString();
                string delimiter = Dts.Variables["User::LocalCsvDelimiter"].Value.ToString();
                string rowTerminator = Dts.Variables["User::LocalRowTerminator"].Value.ToString();
                string fieldQuote = Dts.Variables["User::LocalFieldQuote"].Value.ToString();
                Int32 startRow = Int32.Parse(Dts.Variables["User::LocalStartRow"].Value.ToString());
                string formatTerminator = Dts.Variables["User::LocalFormatTerminator"].Value.ToString();

                string query = string.Empty;

                SqlConnection conn = new SqlConnection();
                conn = (SqlConnection)(Dts.Connections["Integration"].AcquireConnection(Dts.Transaction) as SqlConnection);
                int ctr = 0;

                int rowsAffected = 0;

                string sql = "BULK INSERT " + tableName + " ";
                sql += "FROM '" + fileName + "' ";
                sql += "WITH (";

                if (formatTerminator == "True")
                {
                    sql += "FORMAT = 'CSV' ,";
                }

                sql += " DATAFILETYPE = 'char'";
                sql += ", KILOBYTES_PER_BATCH = 5120 ";
                sql += ", FIRSTROW = " + startRow + " ";

                if (fieldQuote != "")
                {
                    sql += ", FIELDQUOTE = '" + fieldQuote + "' ";
                }

                if (delimiter != "")
                {
                    sql += ", FIELDTERMINATOR = '" + delimiter + "' ";
                }

                if (rowTerminator != "")
                {
                    sql += ", ROWTERMINATOR = '" + rowTerminator + "'";
                }

                sql += ");";

                SqlCommand SQLCommand = new SqlCommand(sql, conn);
                SQLCommand.CommandTimeout = 0;
                rowsAffected = SQLCommand.ExecuteNonQuery();

                Dts.Events.FireInformation(0, "ProcessFile", "Success", string.Empty, 0, ref fireAgain);
                Dts.Events.FireInformation(0, "ProcessFile", fileName + " loaded successfully. No. of rows inserted : " + rowsAffected, string.Empty, 0, ref fireAgain);

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(0, "ProcessFile", "Failure", string.Empty, 0);
                Dts.Events.FireError(0, "ProcessFile", string.Format("{0}|{1}", "ExceptionDetails", ex.ToString()), string.Empty, 0);
                Dts.Events.FireError(0, "ProcessFile", string.Format("{0}|{1}", "InnerExceptionDetails", ex.InnerException), string.Empty, 0);

                Dts.TaskResult = (int)ScriptResults.Failure;
            }
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_9bfc0e3d4a0f4f94aa0124f34d30a7a8</msb:CodeName>
		<msb:DisplayName>ST_9bfc0e3d4a0f4f94aa0124f34d30a7a8</msb:DisplayName>
		<msb:ProjectId>{2F781EF7-2EB0-4705-8BD6-25F8C4BDE0E8}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_bc552e9e6f5c4bac8115efae312731af.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_d0e90441a88e48c8b469feeca1b1d8f6")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_d0e90441a88e48c8b469feeca1b1d8f6")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d0e90441a88e48c8b469feeca1b1d8f6.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d0e90441a88e48c8b469feeca1b1d8f6.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d0e90441a88e48c8b469feeca1b1d8f6.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_d0e90441a88e48c8b469feeca1b1d8f6.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_d0e90441a88e48c8b469feeca1b1d8f6.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_9bfc0e3d4a0f4f94aa0124f34d30a7a8.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMx3YmIAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAA6jYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJg2AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA8BYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADM
NgAAAAAAAEgAAAACAAUAFCQAAMwRAAABAAAAAAAAAOA1AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBwAyAwAAAQAAERcKAigQAAAKbxEAAApyAQAAcG8SAAAK
bxMAAApvFAAACgsCKBAAAApvEQAACnIfAABwbxIAAApvEwAACm8UAAAKDAIoEAAACm8RAAAKck8A
AHBvEgAACm8TAAAKbxQAAAoNAigQAAAKbxEAAApyfwAAcG8SAAAKbxMAAApvFAAAChMEAigQAAAK
bxEAAApysQAAcG8SAAAKbxMAAApvFAAAChMFAigQAAAKbxEAAApy3QAAcG8SAAAKbxMAAApvFAAA
CigVAAAKEwYCKBAAAApvEQAACnIFAQBwbxIAAApvEwAACm8UAAAKfhYAAAomcxcAAAoTBwIoEAAA
Cm8YAAAKcj0BAHBvGQAACgIoEAAACm8aAAAKbxsAAAp1DwAAARMHFhMIclUBAHAIcm8BAHAoHAAA
ChMJEQlycwEAcAdygQEAcCgdAAAKEwkRCXKHAQBwKB4AAAoTCXKVAQBwKB8AAAosDhEJcp8BAHAo
HgAAChMJEQlywQEAcCgeAAAKEwkRCXLvAQBwKB4AAAoTCREJcisCAHASBiggAAAKcm8BAHAoHQAA
ChMJEQVyRwIAcCghAAAKLBURCXJJAgBwEQVygQEAcCgdAAAKEwkJckcCAHAoIQAACiwUEQlyawIA
cAlygQEAcCgdAAAKEwkRBHJHAgBwKCEAAAosFREJcpcCAHARBHK/AgBwKB0AAAoTCREJcsMCAHAo
HgAAChMJEQkRB3MiAAAKJRZvIwAACm8kAAAKEwgCKBAAAApvJQAAChZyyQIAcHLhAgBwfhYAAAoW
EgBvJgAACgIoEAAACm8lAAAKFnLJAgBwB3LxAgBwEggoIAAACigcAAAKfhYAAAoWEgBvJgAACgIo
EAAAChZvJwAACt2YAAAAEwoCKBAAAApvJQAAChZyyQIAcHJNAwBwfhYAAAoWbygAAAomAigQAAAK
byUAAAoWcskCAHByXQMAcHJtAwBwEQpvFAAACigpAAAKfhYAAAoWbygAAAomAigQAAAKbyUAAAoW
cskCAHByXQMAcHKPAwBwEQpvKgAACigpAAAKfhYAAAoWbygAAAomAigQAAAKF28nAAAK3gAqAABB
HAAAAAAAAAIAAACXAgAAmQIAAJgAAAAQAAABHgIoKwAACioeAigsAAAKKq5+AQAABC0ecrsDAHDQ
AwAAAigtAAAKby4AAApzLwAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKDAA
AAoqLnMIAAAGgAMAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACEBAAA
I34AAPAEAADEBgAAI1N0cmluZ3MAAAAAtAsAADAEAAAjVVMA5A8AABAAAAAjR1VJRAAAAPQPAADY
AQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAAJgAAAAUAAAAGAAAACQAAAAEA
AAAwAAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAUAAAABAAAAAQAAAAAAxgMBAAAAAAAG
AHYCLAUGAAUDLAUGAMIBGQUPAKAFAAAGAO8BZAQGAFkCZAQGADoCZAQGAOwCZAQGAJYCZAQGAK8C
ZAQGAAYCZAQGACECMwMKAMoCdQMKADsBdQMOAIgEXgYGAJ8E9wMGAP4D9wMGAKUBGQUGADwG9wMG
AMwETAUGALwEPwQSAHUBsAMSANYBsAMSAFcBKgQGAIoBLAUKAJ4DdQMWAOIF5gAWALkA5gAGAAEA
9wMGAE8D9wMWAPkF5gAWANwE5gAOAJ4AXgYOAJQAqQQKAO4EdQMGAAYB9wMGAMIA9wMGAIsGZAQA
AAAATwAAAAAAAQABAAEAEAAPBAcAOQABAAEAAAAQAFMFrwVNAAEAAwAAARAA7AWvBWEAAwAHAAMB
AAAVBgAARQAEAAoAEQADBNsAEQArAd8AEQCpAOMABgZ3AOcAVoAFBuoAVoALAeoAUCAAAAAAhgAV
BAYAAQCsIwAAAACGGAwFBgABALQjAAAAAIMYDAUGAAEAvCMAAAAAkwjIBO4AAQDoIwAAAACTCBMB
8wABAO8jAAAAAJMIHwH4AAEA9yMAAAAAlghDBv4AAgD+IwAAAACGGAwFBgACAAYkAAAAAJEYEgUD
AQIAAAABAC0DCQAMBQEAEQAMBQYAGQAMBQoAKQAMBRAAMQAMBRAAOQAMBRAAQQAMBRAASQAMBRAA
UQAMBRAAWQAMBRAAYQAMBRAAaQAMBQYAkQAMBQYAuQAMBRUAyQAMBQYAcQANBisA0QDeBTAA2QDu
AzUA4QAjAzsAmQBNAz8A6QBvAUMA8QC+BkgAeQAMBQYA0QD1BUsA+QDuA1AA0QBUBDsAAQF2BFcA
8QAuBlwA8QAuBmMA8QAuBmsA8QCkBnEA6QBNAz8A8QCwBnEACQEMBXcAEQF0BgEAEQGUBn4A0QAj
BoIAGQEaBIgA0QBPBgEAGQECBZMA8QA1BpwAgQCWBKMAcQAMBQYAmQAMBQYAIQHUAKgAIQGHBrEA
oQAMBbcAwQAMBQYACAAUANEACAAYANYAKQBzAD4BLgALABYBLgATAB8BLgAbAD4BLgAjAEcBLgAr
AHABLgAzAHABLgA7AHABLgBDAEcBLgBLAHYBLgBTAHABLgBbAI0BQwBjANYASQBzAD4BYQB7ANYA
YwBrANYAGwADAAEABAADAAAAzAQHAQAAMwEMAQAARwYRAQIABAADAAIABQAFAAEABgAFAAIABwAH
AASAAAABAAAA0x/2UQAAAAAAACsAAAAEAAAAAAAAAAAAAAC/AIsAAAAAAA0AAAAAAAAAAAAAAMgA
VgMAAAAABAAAAAAAAAAAAAAAvwB/AAAAAAAEAAAAAAAAAAAAAAC/APcDAAAAAA0AAAAAAAAAAAAA
AMgAWAAAAAAAAAAAAAEAAABdBQAABQACAAAAAEludDMyAFNUX2QwZTkwNDQxYTg4ZTQ4YzhiNDY5
ZmVlY2ExYjFkOGY2AFNUXzliZmMwZTNkNGEwZjRmOTRhYTAxMjRmMzRkMzBhN2E4ADxNb2R1bGU+
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAFN5c3RlbS5EYXRhAG1zY29y
bGliAERiQ29tbWFuZABTcWxDb21tYW5kAGRlZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBSdW50aW1l
VHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50
aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUA
VlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAFBhcnNl
AEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2Vy
Tm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVB
dHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0
ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRl
AEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJp
YnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUA
U1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0
ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUAU3lzdGVtLlJ1
bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2Rl
bABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfOWJmYzBlM2Q0YTBmNGY5NGFhMDEyNGYzNGQzMGE3
YTguZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4ARmlyZUlu
Zm9ybWF0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAGdldF9U
cmFuc2FjdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBBY3F1aXJlQ29ubmVjdGlvbgBTcWxDb25uZWN0
aW9uAGdldF9Jbm5lckV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24AQ3VsdHVyZUluZm8AZ2V0
X1Jlc291cmNlTWFuYWdlcgBDb25uZWN0aW9uTWFuYWdlcgBFdmVudHNPYmplY3RXcmFwcGVyAEZp
cmVFcnJvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNv
bXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF9kMGU5MDQ0MWE4OGU0OGM4YjQ2OWZl
ZWNhMWIxZDhmNi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMA
U1RfZDBlOTA0NDFhODhlNDhjOGI0NjlmZWVjYTFiMWQ4ZjYuUHJvcGVydGllcwBnZXRfVmFyaWFi
bGVzAFNldHRpbmdzAGdldF9Db25uZWN0aW9ucwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0
cwBnZXRfRXZlbnRzAENvbmNhdABGb3JtYXQAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVz
dWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABzZXRfQ29tbWFuZFRpbWVvdXQAZ2V0X0Fzc2VtYmx5
AEV4ZWN1dGVOb25RdWVyeQBvcF9FcXVhbGl0eQBvcF9JbmVxdWFsaXR5AEVtcHR5AAAdVQBzAGUA
cgA6ADoARgBpAGwAZQBOAGEAbQBlAAAvVQBzAGUAcgA6ADoATABvAGMAYQBsAFMAdABhAGcAaQBu
AGcAVABhAGIAbABlAAAvVQBzAGUAcgA6ADoATABvAGMAYQBsAEMAcwB2AEQAZQBsAGkAbQBpAHQA
ZQByAAAxVQBzAGUAcgA6ADoATABvAGMAYQBsAFIAbwB3AFQAZQByAG0AaQBuAGEAdABvAHIAACtV
AHMAZQByADoAOgBMAG8AYwBhAGwARgBpAGUAbABkAFEAdQBvAHQAZQAAJ1UAcwBlAHIAOgA6AEwA
bwBjAGEAbABTAHQAYQByAHQAUgBvAHcAADdVAHMAZQByADoAOgBMAG8AYwBhAGwARgBvAHIAbQBh
AHQAVABlAHIAbQBpAG4AYQB0AG8AcgAAF0kAbgB0AGUAZwByAGEAdABpAG8AbgAAGUIAVQBMAEsA
IABJAE4AUwBFAFIAVAAgAAADIAAADUYAUgBPAE0AIAAnAAEFJwAgAAENVwBJAFQASAAgACgAAAlU
AHIAdQBlAAAhRgBPAFIATQBBAFQAIAA9ACAAJwBDAFMAVgAnACAALAABLSAARABBAFQAQQBGAEkA
TABFAFQAWQBQAEUAIAA9ACAAJwBjAGgAYQByACcAATssACAASwBJAEwATwBCAFkAVABFAFMAXwBQ
AEUAUgBfAEIAQQBUAEMASAAgAD0AIAA1ADEAMgAwACAAABssACAARgBJAFIAUwBUAFIATwBXACAA
PQAgAAABACEsACAARgBJAEUATABEAFEAVQBPAFQARQAgAD0AIAAnAAErLAAgAEYASQBFAEwARABU
AEUAUgBNAEkATgBBAFQATwBSACAAPQAgACcAAScsACAAUgBPAFcAVABFAFIATQBJAE4AQQBUAE8A
UgAgAD0AIAAnAAEDJwABBSkAOwAAF1AAcgBvAGMAZQBzAHMARgBpAGwAZQAAD1MAdQBjAGMAZQBz
AHMAAFsgAGwAbwBhAGQAZQBkACAAcwB1AGMAYwBlAHMAcwBmAHUAbABsAHkALgAgAE4AbwAuACAA
bwBmACAAcgBvAHcAcwAgAGkAbgBzAGUAcgB0AGUAZAAgADoAIAAAD0YAYQBpAGwAdQByAGUAAA97
ADAAfQB8AHsAMQB9AAAhRQB4AGMAZQBwAHQAaQBvAG4ARABlAHQAYQBpAGwAcwAAK0kAbgBuAGUA
cgBFAHgAYwBlAHAAdABpAG8AbgBEAGUAdABhAGkAbABzAABxUwBUAF8AZAAwAGUAOQAwADQANAAx
AGEAOAA4AGUANAA4AGMAOABiADQANgA5AGYAZQBlAGMAYQAxAGIAMQBkADgAZgA2AC4AUAByAG8A
cABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAACB/eD8dSSESrF0YLRNWS8hAAQg
AQEIAyAAAQUgAQEREQQgAQEOBSABARFZDwcLAg4ODg4OCBI9CA4SQQQgABJpBCAAEm0FIAEScRwD
IAAcAyAADgQAAQgOAgYOBCAAEn0GIAESgIEcBCABHBwGAAMODg4OBwAEDg4ODg4FAAIODg4FAAIC
Dg4GIAIBDhI9AyAACAUgABKAjQogBgEIDg4OCBACCCAFAggODg4IBgADDg4cHAQgABJBCAABEoCR
EYCVBSAAEoCZByACAQ4SgJkIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSUQMGElUDBhIQ
AgYIAwYRFAQAABJRBAAAElUFAAEBElUEAAASEAMAAAEECAASUQQIABJVBAgAEhAIAQAIAAAAAAAe
AQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2QwZTkwNDQxYTg4
ZTQ4YzhiNDY5ZmVlY2ExYjFkOGY2AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjIAAEkBABou
TkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBG
cmFtZXdvcmsgNC43ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJl
YWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
ZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNl
U2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADANgAAAAAAAAAAAADaNgAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAzDYAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAPZR0x8AAAEA9lHTHz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8AZAAwAGUAOQAwADQANAAxAGEAOAA4AGUANAA4AGMAOABiADQANgA5AGYAZQBlAGMAYQAx
AGIAMQBkADgAZgA2AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADgA
MQA0ADcALgAyADAAOQA4ADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AOQBiAGYAYwAwAGUAMwBkADQAYQAwAGYANABmADkANABhAGEAMAAxADIANABmADMANABkADMA
MABhADcAYQA4AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADIAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwA5AGIAZgBjADAAZQAzAGQANABhADAAZgA0AGYAOQA0AGEAYQAwADEAMgA0AGYA
MwA0AGQAMwAwAGEANwBhADgALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8AZAAwAGUAOQAwADQANAAxAGEAOAA4AGUANAA4AGMAOABiADQANgA5AGYAZQBlAGMA
YQAxAGIAMQBkADgAZgA2AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA4ADEANAA3AC4AMgAwADkAOAAyAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA4ADEANAA3AC4AMgAwADkAOAAyAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAOw2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Check for Files and Sort"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="CheckForFiles"
      DTS:DTSID="{c4d74cc3-e625-438b-be9e-acd04b3a7029}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Check for Files and Sort"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_4ee467c3a1dd412d9996b64adfd3405a"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="$Package::FileURI,$Package::InboundFileNamePattern,$Package::ProcessName"
          ReadWriteVariables="User::DataSet,User::FileCount,User::FileName">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Collections;
using System.Xml;
using System.Data.SqlClient;
using System.Linq;
#endregion

namespace ST_3b73308fee45499b97fc5670d708d89e
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            string ProcessName = Dts.Variables["$Package::ProcessName"].Value.ToString();

            try
            {
                bool fireAgain = true;

                // Get File Count
                int fileCount = Directory.GetFiles(Dts.Variables["$Package::FileURI"].Value.ToString(), Dts.Variables["$Package::InboundFileNamePattern"].Value.ToString()).Length;
                Dts.Variables["User::FileCount"].Value = fileCount;

                // Create a dataset. I named it unsorted, because it's not yet sorted
                DataSet dsUnsorted = new DataSet();

                // Create a new table in the dataset
                DataTable filelistTable = dsUnsorted.Tables.Add();
                filelistTable.Columns.Add("FilePath", typeof(string));  // Filepath needed for connectionstring.
                filelistTable.Columns.Add("FileName", typeof(string));  // Filename used for sorting [optional]. 
                filelistTable.Columns.Add("FileDate", typeof(DateTime));// Filedate used for sorting [optional].

                // Get all files within the folder       
                string[] allFiles = Directory.GetFiles(Dts.Variables["$Package::FileURI"].Value.ToString(), Dts.Variables["$Package::InboundFileNamePattern"].Value.ToString());

                // Variable for storing file properties
                FileInfo fileInfo;

                // Loop through the files in the folder       
                foreach (string currentFile in allFiles)
                {
                    // Fill fileInfo variable with file information         
                    fileInfo = new FileInfo(currentFile);

                    // Choose which the file properties you will use
                    // Columns:            FilePath           FileName       FileDate
                    filelistTable.Rows.Add(fileInfo.FullName, fileInfo.Name, fileInfo.CreationTime);
                }

                // Filtering on *.txt extension. Note: like uses * instead of %
                // Sorting the files on filename (or filedate: FileName DESC)
                DataRow[] rows = dsUnsorted.Tables[0].Select("FileName like '*.*'", "FileDate ASC");

                // Create a new sorted dataset that the SSIS foreach loop uses.
                DataSet dsSorted = new DataSet();
                DataTable filelistTableSorted = dsSorted.Tables.Add();

                // Only interested in the filepath which is needed for the connectionstring 
                filelistTableSorted.Columns.Add("FilePath", typeof(string));

                // Fill the new dataset with the sorted rows.
                foreach (DataRow row in rows)
                {
                    filelistTableSorted.Rows.Add(row["FilePath"].ToString());
                }

                // Store the dataset in the SSIS variable       
                Dts.Variables["DataSet"].Value = dsSorted;

                if (fileCount > 0)
                {
                    Dts.Variables["User::FileName"].Value = dsSorted.Tables[0].Rows[0]["FilePath"].ToString();
                }

                Dts.Events.FireInformation(0, "CheckForFiles", "ProcessName : " + ProcessName, string.Empty, 0, ref fireAgain);

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(0, "ProcessFile", "ProcessName : " + ProcessName, string.Empty, 0);
                Dts.Events.FireError(0, "ProcessFile", "Failure", string.Empty, 0);
                Dts.Events.FireError(0, "ProcessFile", string.Format("{0}|{1}", "ExceptionDetails", ex.ToString()), string.Empty, 0);
                Dts.Events.FireError(0, "ProcessFile", string.Format("{0}|{1}", "InnerExceptionDetails", ex.InnerException), string.Empty, 0);

                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_4ee467c3a1dd412d9996b64adfd3405a.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8e03fbde-bc58-461a-92b5-b1653da80848}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_3b73308fee45499b97fc5670d708d89e</RootNamespace>
    <AssemblyName>ST_4ee467c3a1dd412d9996b64adfd3405a</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_4ee467c3a1dd412d9996b64adfd3405a</msb:CodeName>
		<msb:DisplayName>ST_4ee467c3a1dd412d9996b64adfd3405a</msb:DisplayName>
		<msb:ProjectId>{FDD14779-C6F0-4308-BA14-0A95019DD381}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_4ee467c3a1dd412d9996b64adfd3405a.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3b73308fee45499b97fc5670d708d89e.Properties.Settings.get_Default():ST_3b73308fee45499b97fc5670d708d89e.Properties.Sett" +
    "ings")]

namespace ST_3b73308fee45499b97fc5670d708d89e.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_3b73308fee45499b97fc5670d708d89e")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_3b73308fee45499b97fc5670d708d89e")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3b73308fee45499b97fc5670d708d89e.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3b73308fee45499b97fc5670d708d89e.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3b73308fee45499b97fc5670d708d89e.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_3b73308fee45499b97fc5670d708d89e.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_3b73308fee45499b97fc5670d708d89e.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_4ee467c3a1dd412d9996b64adfd3405a.dll">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
AQAAAAAABgCjAmwFBgAyA2wFBgDvAVkFDwDgBQAABgAcApYEBgCGApYEBgBnApYEBgAZA5YEBgDD
ApYEBgDcApYEBgAzApYEBgBOAmoDCgD3AqwDCgBuAawDDgCjBmUADgCyAGUABgD2BBAADgDGBmUA
BgDsBC4EBgA1BC4EBgDSAVkFBgCVBi4EBgAeBYwFBgD/BIEEEgCiAecDEgADAucDEgCKAWwEBgC3
AWwFCgDVA6wDFgAtBhkBFgC8ABkBBgDbBhAABgABAC4EDgCoBGUADgC8BGUABgCGAy4EBgA5AS4E
BgDFAC4EDgBRBGUABgD/AC4EDgDRBGUABgALBRAACgAuBawDBgDSBpYEAAAAAAcAAAAAAAEAAQAB
ABAARgR+ADkAAQABAAAAEACTBe8FWQABAAMAAAEQAEAG7wVtAAMABwADAQAAZQYAAFEABAAKABEA
OgQCAREAXgEGAREAogAKAQYGOQAOAVaAVQYRAVaAPgERAVAgAAAAAIYATAQGAAEA7CMAAAAAhhhM
BQYAAQD0IwAAAACDGEwFBgABAPwjAAAAAJMIGgUVAQEAKCQAAAAAkwhGARoBAQAvJAAAAACTCFIB
HwEBADckAAAAAJYIqwYlAQIAPiQAAAAAhhhMBQYAAgBGJAAAAACRGFIFKgECAAAAAQBkAwkATAUB
ABEATAUGABkATAUKACkATAUQADEATAUQADkATAUQAEEATAUQAEkATAUQAFEATAUQAFkATAUQAGEA
TAUQAGkATAUGAKkATAUGANEATAUVAOEATAUGAHEAXQY1AOkAKQY6APEAJQQ/APkAUANFALEAhANJ
AAEBNwZNAPkAWgNUAHkATAUGAHkAHgZZABEBegBfAIEASQZkACkB1wBqABkBegBzAIkATAUQAIEA
fgZ9AFEB8gBJAFEB6QBJAFEBCAGDAEkBegCJABEBJQSQAIEAnAaWAJEAJQSeAEkBJQSjAOkAcwap
ACEBhwavACEB5Qa1AFkBXAS4AOkAtwYBAFkBQgXDACEBjgbMAJkA4wTTAHEATAUGALEATAUGACkB
zgbYALkATAXeANkATAUGAAgAFAD4AAgAGAD9ACkAcwBlAS4ACwA9AS4AEwBGAS4AGwBlAS4AIwBu
AS4AKwCXAS4AMwCXAS4AOwCXAS4AQwBuAS4ASwCdAS4AUwCXAS4AWwC0AUMAYwD9AEkAcwBlAWEA
ewD9AGMAawD9ABsAAwABAAQAAwAAAB4FLgEAAGYBMwEAAK8GOAECAAQAAwACAAUABQABAAYABQAC
AAcABwAEgAAAAQAAANcfhmMAAAAAAABBAAAABAAAAAAAAAAAAAAA5gBxAAAAAAANAAAAAAAAAAAA
AADvAI0DAAAAAAQAAAAAAAAAAAAAAOYAZQAAAAAABAAAAAAAAAAAAAAA5gAuBAAAAAANAAAAAAAA
AAAAAADvABoAAAAAAAAAAAABAAAAnQUAAAUAAgAAAAAAAEludDMyADxNb2R1bGU+AFN5c3RlbS5J
TwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBTVF80ZWU0NjdjM2ExZGQ0
MTJkOTk5NmI2NGFkZmQzNDA1YQBTeXN0ZW0uRGF0YQBtc2NvcmxpYgBBZGQAU1RfM2I3MzMwOGZl
ZTQ1NDk5Yjk3ZmM1NjcwZDcwOGQ4OWUAZGVmYXVsdEluc3RhbmNlAERhdGFUYWJsZQBWYXJpYWJs
ZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfTmFtZQBnZXRfRnVsbE5h
bWUARGF0ZVRpbWUAZ2V0X0NyZWF0aW9uVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50
aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUA
VlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRv
ckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNl
ckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1
dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJn
ZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2Vt
Ymx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBB
c3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1Nj
cmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50
aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVlAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRU
YXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0
TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzRlZTQ2N2MzYTFkZDQxMmQ5OTk2YjY0YWRm
ZDM0MDVhLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAERh
dGFDb2x1bW4ARmlyZUluZm9ybWF0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9i
YWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAERhdGFUYWJsZUNvbGxlY3Rpb24ARGF0YUNvbHVt
bkNvbGxlY3Rpb24ARGF0YVJvd0NvbGxlY3Rpb24AZ2V0X0lubmVyRXhjZXB0aW9uAEZpbGVJbmZv
AEN1bHR1cmVJbmZvAEZpbGVTeXN0ZW1JbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIARXZlbnRzT2Jq
ZWN0V3JhcHBlcgBGaXJlRXJyb3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfM2I3MzMwOGZl
ZTQ1NDk5Yjk3ZmM1NjcwZDcwOGQ4OWUuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERl
YnVnZ2luZ01vZGVzAFNUXzNiNzMzMDhmZWU0NTQ5OWI5N2ZjNTY3MGQ3MDhkODllLlByb3BlcnRp
ZXMAZ2V0X1RhYmxlcwBnZXRfVmFyaWFibGVzAEdldEZpbGVzAFNldHRpbmdzAGdldF9Db2x1bW5z
AFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9FdmVudHMAZ2V0X1Jvd3MAQ29uY2F0
AEZvcm1hdABPYmplY3QAU2VsZWN0AERhdGFTZXQAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQA
RGF0YVJvdwBnZXRfQXNzZW1ibHkARGlyZWN0b3J5AEVtcHR5AAAAKyQAUABhAGMAawBhAGcAZQA6
ADoAUAByAG8AYwBlAHMAcwBOAGEAbQBlAAAjJABQAGEAYwBrAGEAZwBlADoAOgBGAGkAbABlAFUA
UgBJAABBJABQAGEAYwBrAGEAZwBlADoAOgBJAG4AYgBvAHUAbgBkAEYAaQBsAGUATgBhAG0AZQBQ
AGEAdAB0AGUAcgBuAAAfVQBzAGUAcgA6ADoARgBpAGwAZQBDAG8AdQBuAHQAABFGAGkAbABlAFAA
YQB0AGgAABFGAGkAbABlAE4AYQBtAGUAABFGAGkAbABlAEQAYQB0AGUAACdGAGkAbABlAE4AYQBt
AGUAIABsAGkAawBlACAAJwAqAC4AKgAnAAEZRgBpAGwAZQBEAGEAdABlACAAQQBTAEMAAA9EAGEA
dABhAFMAZQB0AAAdVQBzAGUAcgA6ADoARgBpAGwAZQBOAGEAbQBlAAAbQwBoAGUAYwBrAEYAbwBy
AEYAaQBsAGUAcwAAHVAAcgBvAGMAZQBzAHMATgBhAG0AZQAgADoAIAAAF1AAcgBvAGMAZQBzAHMA
RgBpAGwAZQAAD0YAYQBpAGwAdQByAGUAAA97ADAAfQB8AHsAMQB9AAAhRQB4AGMAZQBwAHQAaQBv
AG4ARABlAHQAYQBpAGwAcwAAK0kAbgBuAGUAcgBFAHgAYwBlAHAAdABpAG8AbgBEAGUAdABhAGkA
bABzAABxUwBUAF8AMwBiADcAMwAzADAAOABmAGUAZQA0ADUANAA5ADkAYgA5ADcAZgBjADUANgA3
ADAAZAA3ADAAOABkADgAOQBlAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMA
ZQBzAAAAPY2ASfVww0SKnyWU/t/sXwAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERZRkHDQ4CCBI9
EkESRRI9EkEdDggdEkkSSRJNBCAAEnUEIAASeQUgARJ9HAMgABwDIAAOBgACHQ4ODgQgAQEcBSAA
EoCJBCAAEkEFIAASgI0IAAESgJURgJkJIAISgJ0OEoCVBSAAEoClBSAAEYChBiABEkkdHAUgARJB
CAcgAh0SSQ4OBCABHA4FIAESSQgFIAASgK0FAAIODg4CBg4KIAYBCA4ODggQAgggBQIIDg4OCAYA
Aw4OHBwEIAASTQUgABKAsQcgAgEOEoCxCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEl0D
BhJhAwYSEAIGCAMGERQEAAASXQQAABJhBQABARJhBAAAEhADAAABBAgAEl0ECAASYQQIABIQCAEA
CAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF8zYjcz
MzA4ZmVlNDU0OTliOTdmYzU2NzBkNzA4ZDg5ZQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIy
AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1l
Ei5ORVQgRnJhbWV3b3JrIDQuNwAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJl
c291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWws
IFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1l
UmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAOQ1AAAAAAAAAAAAAP41AAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAADwNQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAIZj1x8AAAEAhmPXHz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8AMwBiADcAMwAzADAAOABmAGUAZQA0ADUANAA5ADkAYgA5ADcAZgBjADUANgA3ADAAZAA3
ADAAOABkADgAOQBlAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADgA
MQA1ADEALgAyADUANAA3ADgAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8ANABlAGUANAA2ADcAYwAzAGEAMQBkAGQANAAxADIAZAA5ADkAOQA2AGIANgA0AGEAZABmAGQA
MwA0ADAANQBhAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADIAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwA0AGUAZQA0ADYANwBjADMAYQAxAGQAZAA0ADEAMgBkADkAOQA5ADYAYgA2ADQA
YQBkAGYAZAAzADQAMAA1AGEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8AMwBiADcAMwAzADAAOABmAGUAZQA0ADUANAA5ADkAYgA5ADcAZgBjADUANgA3ADAA
ZAA3ADAAOABkADgAOQBlAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA4ADEANQAxAC4AMgA1ADQANwA4AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA4ADEANQAxAC4AMgA1ADQANwA4AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAABA2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ErrorFileTask"
      DTS:CreationName="Microsoft.FileSystemTask"
      DTS:Description="File System Task"
      DTS:DTSID="{e5799b7c-bb32-49c2-8276-e8f546e59f2d}"
      DTS:ExecutableType="Microsoft.FileSystemTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ErrorFileTask"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="MoveFile"
          TaskOverwriteDestFile="True"
          TaskSourcePath="User::FileName"
          TaskIsSourceVariable="True"
          TaskDestinationPath="$Package::MoveAfterFailure"
          TaskIsDestinationVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute Generic Stored Procedure SQL Task"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{199d3a6e-bc8d-485d-a7da-810d5f4c25f8}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute Generic Stored Procedure SQL Task"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{5E15F3A3-FA67-4E6F-B1A4-D6B14B824B6C}"
          SQLTask:SqlStmtSourceType="Variable"
          SQLTask:SqlStatementSource="$Package::StoredProcedure" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\RenameFileTask"
      DTS:CreationName="Microsoft.FileSystemTask"
      DTS:Description="RenameFileTask"
      DTS:DTSID="{38906b14-b1c0-4960-b9b4-4a4d6720e0db}"
      DTS:ExecutableType="Microsoft.FileSystemTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="RenameFileTask"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="RenameFile"
          TaskOverwriteDestFile="True"
          TaskSourcePath="User::FileName"
          TaskIsSourceVariable="True"
          TaskDestinationPath="User::RenamedFilePathArchive"
          TaskIsDestinationVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{203292C4-84C8-4997-A798-FD8761679C2E}"
      DTS:EvalOp="1"
      DTS:Expression="@[User::FileCount] &gt; 0 &amp;&amp;  @[$Package::ArchivePrefix] == &quot;False&quot;"
      DTS:From="Package\Execute Generic Stored Procedure SQL Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\ArchiveFileTask" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{59FF6E4C-D725-4536-B8DE-D81D88A6F53B}"
      DTS:EvalOp="1"
      DTS:Expression="@[User::FileCount] &gt; 0"
      DTS:From="Package\Check for Files and Sort"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Bulk Import into Staging Table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{6D80444A-77F1-43A7-AF76-5113BC8ABCE5}"
      DTS:From="Package\Bulk Import into Staging Table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Execute Generic Stored Procedure SQL Task" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{B635CAE3-E1AD-498F-BAC2-77D8945DB089}"
      DTS:From="Package\Execute Generic Stored Procedure SQL Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\ErrorFileTask"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{CA9A51E3-5A8E-4DAD-85AF-ACB927DD2BD8}"
      DTS:From="Package\Bulk Import into Staging Table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\ErrorFileTask"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{811087B0-C44E-4AD0-A93E-2685AB2BE947}"
      DTS:EvalOp="1"
      DTS:Expression="@[User::FileCount] &gt; 0 &amp;&amp;  @[$Package::ArchivePrefix] == &quot;True&quot;"
      DTS:From="Package\Execute Generic Stored Procedure SQL Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\RenameFileTask" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{24905575-7D7A-430D-9CFA-31710081F7D2}"
      DTS:From="Package\RenameFileTask"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\ArchiveFileTask 1" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171,42"
          Id="Package\ArchiveFileTask"
          TopLeft="39,231" />
        <NodeLayout
          Size="171,42"
          Id="Package\ArchiveFileTask 1"
          TopLeft="239,302" />
        <NodeLayout
          Size="226,42"
          Id="Package\Bulk Import into Staging Table"
          TopLeft="74,84" />
        <NodeLayout
          Size="226,42"
          Id="Package\Check for Files and Sort"
          TopLeft="79,6" />
        <NodeLayout
          Size="171,42"
          Id="Package\ErrorFileTask"
          TopLeft="405,146" />
        <NodeLayout
          Size="301,42"
          Id="Package\Execute Generic Stored Procedure SQL Task"
          TopLeft="38,151" />
        <NodeLayout
          Size="171,42"
          Id="Package\RenameFileTask"
          TopLeft="238,230" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="139.666666666667,193">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-15.1666666666667,38"
              Start="0,0"
              End="-15.1666666666667,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.3205551883675" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.3205551883675"
                    Point2="0,15.3205551883675"
                    Point3="-4,15.3205551883675" />
                  <mssgle:LineSegment
                    End="-11.1666666666667,15.3205551883675" />
                  <mssgle:CubicBezierSegment
                    Point1="-11.1666666666667,15.3205551883675"
                    Point2="-15.1666666666667,15.3205551883675"
                    Point3="-15.1666666666667,19.3205551883675" />
                  <mssgle:LineSegment
                    End="-15.1666666666667,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.5833333333333,20.3205551883675,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="189.5,48">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,6.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="187.75,126">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25"
              Start="0,0"
              End="0,17.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="339,172.333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="66,0"
              Start="0,0"
              End="58.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="58.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="14.00865234375,5,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="300,105">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="105,56.3333333333333"
              Start="0,0"
              End="97.5,56.3333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="56.6880733944954,0" />
                  <mssgle:CubicBezierSegment
                    Point1="56.6880733944954,0"
                    Point2="60.6880733944954,0"
                    Point3="60.6880733944954,4" />
                  <mssgle:LineSegment
                    End="60.6880733944954,52.3333333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="60.6880733944954,52.3333333333333"
                    Point2="60.6880733944954,56.3333333333333"
                    Point3="64.6880733944954,56.3333333333333" />
                  <mssgle:LineSegment
                    End="97.5,56.3333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="45.4467257382454,-15.7490234375,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="237.333333333333,193">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="86.1666666666667,37"
              Start="0,0"
              End="86.1666666666667,29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.9173826834104" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.9173826834104"
                    Point2="0,14.9173826834104"
                    Point3="4,14.9173826834104" />
                  <mssgle:LineSegment
                    End="82.1666666666667,14.9173826834104" />
                  <mssgle:CubicBezierSegment
                    Point1="82.1666666666667,14.9173826834104"
                    Point2="86.1666666666667,14.9173826834104"
                    Point3="86.1666666666667,18.9173826834104" />
                  <mssgle:LineSegment
                    End="86.1666666666667,29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="35.0833333333333,19.9173826834104,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="324,272">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>